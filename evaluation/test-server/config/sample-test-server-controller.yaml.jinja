apiVersion: v1
kind: ReplicationController
metadata:
  name: test-server
  labels:
    app: test-server
spec:
  # The default number of replicas.
  replicas: 1
  selector:
    app: test-server
  template:
    metadata:
      labels:
        app: test-server
        scaling-method: {{ autoscaling_method }}
        initialization_time: {{ pod_initialization_time }}
    spec:
      containers:
      - name: test-server
        image: mattjmcnaughton/test-server:{{ head_commit_hash }}
        # @TODO Update this with values that I think make sense.
        resources:
          requests:
            cpu: 100m
          limits:
            cpu: 100m
        readinessProbe:
          # If GET request to this endpoint returns true, then ready.
          httpGet:
            path: /ready
            port: 80
          # Idk if this method will work, but try to set a very long timeout so
          # that can control pod initialization time by just waiting to return
          # success from `/ready`. But there may be some max value for
          # `timeoutSeconds` so I may have to find a different way.
          initialDelaySeconds: 1
          # Set to 10 minutes (meaning that for now that is the longest possible
          # pod initialization time).
          timeoutSeconds: 600
        env:
        - name: SCALING_METHOD
          # Options are static-under-provision, static-over-provision,
          # static-average-provision, reactive, predictive
          value: {{ autoscaling_method }}
        - name: INITIALIZATION_TIME
          value: {{ pod_initialization_time }}
        # The following variables are all stored in `secret-config.json` and
        # should be kept secret - hence the `generated/` dir is not checked into
        # version control.
        - name: DATABASE_NAME
          value: {{ database_name }}
        - name: DATABASE_ADDRESS
          value: {{ database_address }}
        - name: DATABASE_USERNAME
          value: {{ database_username }}
        - name: DATABASE_PASSWORD
          value: {{ database_password }}
        - name: ROLLBAR_TOKEN
          value: {{ rollbar_token }}
        # Need to set a PORT environment variable to tell the application to use
        # the production port 80, instead of the development port 3000. Need to
        # add quotes to force it to be a string.
        - name: PORT
          value: "80"
        - name: TEST_SERVER_ENV
          value: PRODUCTION
        ports:
        - name: http-server
          containerPort: 80
